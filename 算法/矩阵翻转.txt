#include<bits/stdc++.h>
using namespace std;
/**
有一副由NxN矩阵表示的图像，这里每个像素用一个int表示，
请编写一个算法，在不占用额外内存空间的情况下(即不使用缓存矩阵)，
将图像顺时针旋转90度。
给定一个NxN的矩阵，和矩阵的阶数N,请返回旋转后的NxN矩阵,
保证N小于等于500，图像元素小于等于256。
测试样例：
[[1,2,3],[4,5,6],[7,8,9]],3
返回：[[7,4,1],[8,5,2],[9,6,3]]
*/
int main(){
    vector<vector<int> > mat;
    int n;
    int m = n;
    //先将矩阵按照对角线翻转
     for(int i = 0 ; i < n - 1 ; i ++){
        for(int j = 0 ; j < n - i -1 ;j++){
            int temp = mat[i][j];
            mat[i][j] = mat[n - j - 1][n - i - 1];
            mat[n - j - 1][n - i - 1] = temp;
        }
    }
    //然后在上下翻转
    for(int i = 0 ;i < (n / 2);i++){
        for(int j = 0 ; j < m;j++){
            int temp = mat[i][j];
            mat[i][j] = mat[n - i - 1][j];
            mat[n - i - 1][j] = temp;
        }
    }
    //return mat;


    return 0;
}
