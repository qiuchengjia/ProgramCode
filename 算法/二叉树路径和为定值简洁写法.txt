#include<bits/stdc++.h>
using namespace std;
/**
输入一颗二叉树和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。
路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。
*/
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};
class Solution {
public:
    vector<vector<int> > result;
        vector<int > vec;
    void dfsPath(TreeNode * root , int sum){
        vec.push_back(root->val);
        if(sum - root->val == 0 && !root->left && !root->right){
                result.push_back(vec);
        }else{
            if(root->left)dfsPath(root->left , sum - root->val);
            if(root->right)dfsPath(root->right , sum - root->val);
        }
        vec.pop_back();
    }
    vector<vector<int> > FindPath(TreeNode* root,int expectNumber) {
        if(root)
            dfsPath(root , expectNumber);
        return result;
    }
};

int main(){
    return 0;
}
