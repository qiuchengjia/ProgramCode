#include<bits/stdc++.h>
#define N 9 //数组元素个数
using namespace std;
/**
数组中只出现一次的数字
例如{2,4,3,6,3,2,5,5},只有4,6这两个数字只出现一次
*/
unsigned int findFirstBitIs1(int num){
    int indexBit = 0 ;
    while((num & 1) == 0 && indexBit < 8 * sizeof(int)){
        num >>= 1;
        indexBit++;
    }
    return indexBit;
}
bool IsBit1(int num , int indexBit){
    num = num >> indexBit;
    return num & 1;
}
void getOnceNumber(int * data , int len , int * num1 , int * num2){
    if(data == NULL || len <= 0)
        return;
    int resultExclusiveOR = 0 ;
    for(int i =0 ;i < len ;i++)
        resultExclusiveOR ^= data[i];
    *num1 = *num2 = 0 ;
    int indexOf1 = findFirstBitIs1(resultExclusiveOR);
    for(int i = 0 ;i < len ;i++){
        if(IsBit1(data[i] , indexOf1)){
            *num1 ^= data[i];
        }else{
            *num2 ^= data[i];
        }
    }
}
int main(){
    int data[] = {2,4,3,6,3,2,5,5};
    int num1,num2;
    getOnceNumber(data , sizeof(data)/sizeof(data[0]) , &num1 , &num2);
    printf("%d %d\n", min(num1,num2) , max(num1 , num2));
    return 0;
}
